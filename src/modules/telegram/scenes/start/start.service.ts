import { Injectable, Logger } from '@nestjs/common';
import { IScene, MyContext } from '../../../../types';
import { Api, Bot, RawApi } from 'grammy';
import { UsersService } from '../../../users';
import { SCENES } from '../scenes.constants';

@Injectable()
export class StartSceneService implements IScene {
  readonly SCENE_NAME = SCENES.START;

  private readonly logger = new Logger(StartSceneService.name, {
    timestamp: true,
  });

  constructor(private readonly usersService: UsersService) {}

  async handle(ctx: MyContext): Promise<void> {
    ctx.session.waitingForInput = null;
    ctx.session.sceneEntryTime = null;
    ctx.session.currentScene = this.SCENE_NAME;

    const user = ctx.from;
    if (user) {
      await this.usersService.findOrCreate({
        clientId: user.id,
        userName: user.first_name,
        userNick: user.username,
        lang: user.language_code || 'ru',
      });
    }

    const message = `üëãüèª –ü—Ä–∏–≤–µ—Ç\\! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ *–µ–¥—ã –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤*\\. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–µ—Ä–≤–∏—Å–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –º–µ–Ω—é\\.`;
    // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    // –ü–æ—ç—Ç–æ–º—É –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∞ —Å—Ä–∞–∑—É –≤—ã–∑–≤–∞—Ç—å mainMenuScene.handle()
    // –ù–æ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —Å—Ç–∞—Ä—Ç - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω.
    await ctx.reply(message, { parse_mode: 'MarkdownV2' });
  }
}
