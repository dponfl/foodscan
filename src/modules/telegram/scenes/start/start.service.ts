import { Injectable, Logger } from '@nestjs/common';
import { IScene, MyContext } from '../../../../types';
import { UsersService } from '../../../users';
import { SCENES } from '../scenes.constants';

@Injectable()
export class StartSceneService implements IScene {
  readonly SCENE_NAME = SCENES.START;

  private readonly logger = new Logger(StartSceneService.name, {
    timestamp: true,
  });

  constructor(private readonly usersService: UsersService) {}

  async handle(ctx: MyContext): Promise<void> {
    ctx.session.waitingForInput = null;
    ctx.session.sceneEntryTime = Date.now();
    ctx.session.currentScene = this.SCENE_NAME;

    const user = ctx.from;
    if (user) {
      ctx.session.tgId = ctx.from.id || 0;
      ctx.session.tgName = ctx.from.first_name || '';
      ctx.session.tgNickname = ctx.from.username || '';
      ctx.session.tgLang = ctx.from.language_code || 'ru';

      await this.usersService.findOrCreate({
        clientId: user.id,
        userName: user.first_name,
        userNick: user.username,
        lang: user.language_code || 'ru',
      });
    }

    const startText = `üëã –ü—Ä–∏–≤–µ—Ç\\! –Ø ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ *E\\-scanner*

–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–∞ ‚Äî –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –≤—Å—é –ø—Ä–∞–≤–¥—É –æ –µ–≥–æ —Å–æ—Å—Ç–∞–≤–µ:

üîç –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏:
‚Ä¢ –ö–∞–∫–∏–µ *–ï\\-–¥–æ–±–∞–≤–∫–∏* —Ç–∞–º —Å–ø—Ä—è—Ç–∞–Ω—ã
‚Ä¢ –ù–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–∏ *–≤—Ä–µ–¥–Ω—ã* –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞
‚Ä¢ –ß—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å *–æ–ø–∞—Å–Ω—ã–º –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è*
‚Ä¢ –ò —á—Ç–æ *–ø—Ä–æ–ø–∏—Ç—å*, —á—Ç–æ–±—ã –Ω–µ–π—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Ä–µ–¥

üß† –ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ\\?

–ü–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –µ–¥–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã, –¥–∞–∂–µ –Ω–µ –¥–æ–≥–∞–¥—ã–≤–∞—è—Å—å, —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç:

‚ö†Ô∏è –ù–∞—Ä—É—à–∞—Ç—å —Ä–∞–±–æ—Ç—É *–∂–µ–ª—É–¥–∫–∞ –∏ –∫–∏—à–µ—á–Ω–∏–∫–∞*
‚ö° –í–ª–∏—è—Ç—å –Ω–∞ *—ç–Ω–µ—Ä–≥–∏—é –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ*
üò¥ –ü–æ—Ä—Ç–∏—Ç—å *—Å–æ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ*
üß† –ò –¥–∞–∂–µ —Å–Ω–∏–∂–∞—Ç—å *–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –∏ –ø–∞–º—è—Ç—å*

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ *–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å –µ–¥—É*, –∞ –∑–Ω–∞—á–∏—Ç ‚Äî
*–¥–æ–ª—å—à–µ –±—ã—Ç—å —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º, –∑–¥–æ—Ä–æ–≤—ã–º –∏ –±–æ–¥—Ä—ã–º\\!*
\\-\\-\\-
üî• –ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—à—å\\?
–ñ–º–∏ üëâ /check ‚Äî –∏–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ *¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç¬ª* –∏ –Ω–∞—á–Ω—ë–º –ø—Ä–æ–≤–µ—Ä–∫—É\\! üîé`;

    await ctx.reply(startText, { parse_mode: 'MarkdownV2' });
  }
}
