import { Injectable } from '@nestjs/common';
import { IScene, MyContext } from '../../../../types';
import { InlineKeyboard } from 'grammy';
import { CALLBACK_DATA, SCENES, WAITING_FOR_INPUT } from '../scenes.constants';

@Injectable()
export class SupportSceneService implements IScene {
  readonly SCENE_NAME = SCENES.SUPPORT;

  async handle(ctx: MyContext): Promise<void> {
    ctx.session.waitingForInput = null;
    ctx.session.sceneEntryTime = Date.now();
    ctx.session.currentScene = this.SCENE_NAME;

    const text = `–ö–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ:
1\\. /check ‚Äî –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ–¥—É–∫—Ç–∞  
2\\. /profile ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å  
3\\. /pricing ‚Äî —Ç–∞—Ä–∏—Ñ—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∏  
4\\. /buy ‚Äî –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É

‚ùì –ï—Å–ª–∏ —á—Ç–æ\\-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ‚Äî –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:  
@support\\_e\\-scanner\\_bot
`;

    const keyboard = new InlineKeyboard()
      .text('üîç–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç', CALLBACK_DATA.GO_TO_CHECK_PRODUCT)
      .row()
      .text('üîô –ù–∞–∑–∞–¥', CALLBACK_DATA.GO_TO_MAIN_MENU);

    if (ctx.callbackQuery) {
      await ctx.answerCallbackQuery();
      await ctx.deleteMessage();
    }

    await ctx.reply(text, {
      parse_mode: 'MarkdownV2',
      reply_markup: keyboard,
    });
  }
}
