import { Injectable } from '@nestjs/common';
import { IScene, MyContext } from '../../../../types';
import { InlineKeyboard, InputFile } from 'grammy';
import { CALLBACK_DATA, SCENES, WAITING_FOR_INPUT } from '../scenes.constants';
import * as path from 'path';

@Injectable()
export class CheckProductSceneService implements IScene {
  readonly SCENE_NAME = SCENES.CHECK_PRODUCT;

  async handle(ctx: MyContext): Promise<void> {
    ctx.session.waitingForInput = WAITING_FOR_INPUT.PRODUCT_PHOTO;
    ctx.session.sceneEntryTime = Date.now();
    ctx.session.currentScene = this.SCENE_NAME;

    const photoPath = path.join(
      process.cwd(),
      'dist',
      'assets',
      'example-composition.jpg',
    );

    const backKeyboard = new InlineKeyboard().text(
      'üîô –ù–∞–∑–∞–¥',
      CALLBACK_DATA.GO_TO_MAIN_MENU,
    );

    const instructionsPart1 = `üì∏ –ü—Ä–∏—à–ª–∏ –º–Ω–µ –û–î–ù–û —Ñ–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–∞ ‚Äî —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —É–ø–∞–∫–æ–≤–∫–∏ ‚Äî —Ç–∞–º, –≥–¥–µ —É–∫–∞–∑–∞–Ω —Å–æ—Å—Ç–∞–≤ (—Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –º–µ–ª–∫–∏–º —à—Ä–∏—Ñ—Ç–æ–º).


‚ö†Ô∏è –í–∞–∂–Ω–æ: –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ! –î–∞–ª—å—à–µ —è —Å–∞–º –≤—Å—ë –ø–æ–¥—Å–∫–∞–∂—É.

üß† –ü—Ä–∏–º–µ—Ä, –∫–∞–∫ –¥–æ–ª–∂–Ω–æ –≤—ã–≥–ª—è–¥–µ—Ç—å —Ñ–æ—Ç–æ:`;
    const instructionsPart2 = `–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ —Å—é–¥–∞, –∏ —è –Ω–∞—á–Ω—É –∞–Ω–∞–ª–∏–∑.`;

    // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª –ø–æ –∫–Ω–æ–ø–∫–µ
    if (ctx.callbackQuery) {
      // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "–∑–∞–≥—Ä—É–∑–∫—É"
      await ctx.answerCallbackQuery();
      // –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–∞–≥—Ä–æ–º–æ–∂–¥–µ–Ω–∏—è
      await ctx.deleteMessage();
    }

    await ctx.reply(instructionsPart1);
    await ctx.replyWithPhoto(new InputFile(photoPath), {
      caption: instructionsPart2,
      reply_markup: backKeyboard,
    });
  }
}
