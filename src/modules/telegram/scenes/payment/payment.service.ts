import { Injectable, Logger } from '@nestjs/common';
import { IScene, MyContext } from '../../../../types';
import { CALLBACK_DATA, SCENES } from '../scenes.constants';
import { InlineKeyboard } from 'grammy';

@Injectable()
export class PaymentSceneService implements IScene {
  private readonly logger = new Logger(PaymentSceneService.name);

  readonly SCENE_NAME = SCENES.PAYMENT;

  async handle(ctx: MyContext): Promise<void> {
    ctx.session.waitingForInput = null;
    ctx.session.sceneEntryTime = Date.now();
    ctx.session.currentScene = this.SCENE_NAME;

    const text = `üí≥ –í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π –¥–ª—è —Å–µ–±—è —Å–ø–æ—Å–æ–±:
–¢—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å –æ–¥–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Äî –∏–ª–∏ –≤–∑—è—Ç—å –±–µ–∑–ª–∏–º–∏—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏ –Ω–µ –¥—É–º–∞—Ç—å –æ –ª–∏–º–∏—Ç–∞—Ö\\.
üëá –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç:
`;

    const keyboard = new InlineKeyboard()
      .text(
        `üîç 1 –ø—Ä–æ–≤–µ—Ä–∫–∞: 39 ‚ÇΩ (23 ‚≠êÔ∏è)`,
        CALLBACK_DATA.GO_TO_PAYMENT_OPTION_ONE,
      )
      .row()
      .text(`üì¶ 10 –ø—Ä–æ–≤–µ—Ä–æ–∫: 299 ‚ÇΩ (175 ‚≠êÔ∏è)`)
      .row()
      .text(`‚ôæ 1 –º–µ—Å—è—Ü: 549 ‚ÇΩ (323 ‚≠êÔ∏è)`)
      .row()
      .text(`üóì 1 –≥–æ–¥: 3 490 ‚ÇΩ (2 053 ‚≠êÔ∏è)`)
      .row()
      .text(`üîô –ù–∞–∑–∞–¥`, CALLBACK_DATA.GO_TO_TARIFFS);

    if (ctx.callbackQuery) {
      await ctx.answerCallbackQuery();
      await ctx.deleteMessage();
    }

    await ctx.reply(text, {
      parse_mode: 'MarkdownV2',
      reply_markup: keyboard,
    });
  }
}
